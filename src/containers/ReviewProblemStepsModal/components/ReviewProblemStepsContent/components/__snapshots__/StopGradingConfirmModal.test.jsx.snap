// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StopGradingConfirmModal snapshot: closed 1`] = `
ReactShallowRenderer {
  "shallowRenderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useId": [Function],
      "useImperativeHandle": [Function],
      "useInsertionEffect": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useSyncExternalStore": [Function],
      "useTransition": [Function],
    },
    "_element": <StopGradingConfirmModal
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isOpen={false}
      isOverride={false}
      onCancel={[MockFunction this.props.onCancel]}
      onConfirm={[MockFunction this.props.onConfirm]}
    />,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_idCounter": 0,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": <ConfirmModal
      cancelText="Go back"
      confirmText="Cancel grading"
      content="Your progress will be lost."
      isOpen={false}
      onCancel={[MockFunction this.props.onCancel]}
      onConfirm={[MockFunction this.props.onConfirm]}
      title="Are you sure you want to stop grading this response?"
    />,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
  },
  "shallowWrapper": <ConfirmModal
    cancelText="Go back"
    confirmText="Cancel grading"
    content="Your progress will be lost."
    isOpen={false}
    onCancel={[MockFunction this.props.onCancel]}
    onConfirm={[MockFunction this.props.onConfirm]}
    title="Are you sure you want to stop grading this response?"
  />,
}
`;

exports[`StopGradingConfirmModal snapshot: open 1`] = `
ReactShallowRenderer {
  "shallowRenderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useId": [Function],
      "useImperativeHandle": [Function],
      "useInsertionEffect": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useSyncExternalStore": [Function],
      "useTransition": [Function],
    },
    "_element": <StopGradingConfirmModal
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isOpen={true}
      isOverride={false}
      onCancel={[MockFunction this.props.onCancel]}
      onConfirm={[MockFunction this.props.onConfirm]}
    />,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_idCounter": 0,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": <ConfirmModal
      cancelText="Go back"
      confirmText="Cancel grading"
      content="Your progress will be lost."
      isOpen={true}
      onCancel={[MockFunction this.props.onCancel]}
      onConfirm={[MockFunction this.props.onConfirm]}
      title="Are you sure you want to stop grading this response?"
    />,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
  },
  "shallowWrapper": <ConfirmModal
    cancelText="Go back"
    confirmText="Cancel grading"
    content="Your progress will be lost."
    isOpen={true}
    onCancel={[MockFunction this.props.onCancel]}
    onConfirm={[MockFunction this.props.onConfirm]}
    title="Are you sure you want to stop grading this response?"
  />,
}
`;

exports[`StopGradingConfirmModal snapshot: open, isOverride 1`] = `
ReactShallowRenderer {
  "shallowRenderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useId": [Function],
      "useImperativeHandle": [Function],
      "useInsertionEffect": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useSyncExternalStore": [Function],
      "useTransition": [Function],
    },
    "_element": <StopGradingConfirmModal
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
      isOpen={false}
      isOverride={true}
      onCancel={[MockFunction this.props.onCancel]}
      onConfirm={[MockFunction this.props.onConfirm]}
    />,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_idCounter": 0,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": <ConfirmModal
      cancelText="Go back"
      confirmText="Stop grade override"
      content="Your progress will be lost."
      isOpen={false}
      onCancel={[MockFunction this.props.onCancel]}
      onConfirm={[MockFunction this.props.onConfirm]}
      title="Are you sure you want to stop the grade override?"
    />,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
  },
  "shallowWrapper": <ConfirmModal
    cancelText="Go back"
    confirmText="Stop grade override"
    content="Your progress will be lost."
    isOpen={false}
    onCancel={[MockFunction this.props.onCancel]}
    onConfirm={[MockFunction this.props.onConfirm]}
    title="Are you sure you want to stop the grade override?"
  />,
}
`;
