// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StartGradingButton component component snapshots hide: renders empty component if hook.hide is true 1`] = `
ReactShallowRenderer {
  "shallowRenderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useId": [Function],
      "useImperativeHandle": [Function],
      "useInsertionEffect": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useSyncExternalStore": [Function],
      "useTransition": [Function],
    },
    "_element": <StartGradingButton
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
    />,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_idCounter": 0,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": null,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
  },
  "shallowWrapper": null,
}
`;

exports[`StartGradingButton component component snapshots smoke test: forwards props to components from hooks 1`] = `
ReactShallowRenderer {
  "shallowRenderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useId": [Function],
      "useImperativeHandle": [Function],
      "useInsertionEffect": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useSyncExternalStore": [Function],
      "useTransition": [Function],
    },
    "_element": <StartGradingButton
      intl={
        Object {
          "formatMessage": [Function],
        }
      }
    />,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_idCounter": 0,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": <React.Fragment>
      <Button
        props="hooks.buttonArgs"
        variant="primary"
      />
      <OverrideGradeConfirmModal
        props="hooks.overrideGradeArgs"
      />
      <StopGradingConfirmModal
        props="hooks.stopGradingArgs"
      />
    </React.Fragment>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
  },
  "shallowWrapper": <React.Fragment>
    <Button
      props="hooks.buttonArgs"
      variant="primary"
    />
    <OverrideGradeConfirmModal
      props="hooks.overrideGradeArgs"
    />
    <StopGradingConfirmModal
      props="hooks.stopGradingArgs"
    />
  </React.Fragment>,
}
`;
